//
//  Request.swift
//  HttpRequest
//
//  Created by Chidume Nnamdi on 25/05/2024.
//

import Foundation

struct Parameter: Codable, Identifiable {
    var id = UUID()
    var key: String;
    var value: String;
    var enabled: Bool;
}

struct Header: Codable, Identifiable {
    var id = UUID()
    var key: String;
    var value: String;
    var enabled: Bool;
}

struct Variable: Codable {
    var key: String;
    var value: String;
}

enum BodyTypes: Codable {
    case none
    case form_data
    case x_www_form_urlencoded
    case raw
    case graphql
}

struct Body: Codable {
    var type: BodyTypes
    var value: String
}

struct Request: Identifiable, Codable {
    var id = UUID()
    var method: String;
    //var urlProtocol: String;
    var url: String;
    var parameters: [Parameter];
    var body: Body;
    var headers: [Header]
    //var authorization: Authorization;
    var tests: String;
    var variables: Array<Variable>;
    
    mutating func appendAutoGeneratedHeaders() {
        self.headers += autoGeneratedHeaders
    }
    
    init(method: String, urlProtocol: String, url: String, parameters: [Parameter], body: Body, headers: [Header], authorization: Authorization, tests: String, variables: Array<Variable>) {
        self.method = method
        //self.urlProtocol = urlProtocol
        self.url = url
        self.parameters = parameters
        self.body = body
        self.headers = headers
        //self.authorization = authorization
        self.tests = tests
        self.variables = variables
        
        self.appendAutoGeneratedHeaders()
    }
    
    init(parameters: [Parameter]) {
        self.parameters = parameters
        self.method = ""
        //self.urlProtocol = ""
        self.url = ""
        self.body = Body(type: .none, value: "")
        self.headers = []
        self.tests = ""
        self.variables = []
        
        self.appendAutoGeneratedHeaders()

    }
    
    init() {
        self.method = ""
        //self.urlProtocol = ""
        self.url = ""
        self.parameters = []
        self.body = Body(type: .none, value: "")
        self.headers = []
        //self.authorization = authorization
        self.tests = ""
        self.variables = []

        self.appendAutoGeneratedHeaders()

    }
}


var autoGeneratedHeaders = [
    Header(key: "Content-Type", value: "application/json", enabled: true),
    Header(key: "User-Agent", value: "HttpRequest Runtime", enabled: true),
    Header(key: "Accpet-Encoding", value: "gzip, deflate, br", enabled: true),
    Header(key: "Connection", value: "keep-alive", enabled: true)
]
